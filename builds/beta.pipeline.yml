trigger:
- release/*

pr: none

variables:
  - group: dev-build
  - group: packages
  - name: WinPool
    value: 'windows-2022'
  - name: LinuxPool
    value: 'ubuntu-20.04'

pool:
  vmImage: $(WinPool)

stages:
  - template: 'templates/test.stage.yml'

  - stage: build_artifacts
    dependsOn: test_stage
    condition: succeeded()
    displayName: 'Build artifacts'
    jobs:
    - template: debian-x64/build.pipeline.yml
    - template: docker-containers/win.pipeline.yml
    - template: docker-containers/linux.pipeline.yml
    - template: docker-containers/arm64.pipeline.yml
    - template: docker-containers/arm.pipeline.yml
    - template: fedora-x64/build.pipeline.yml
    - template: linux-arm/build.pipeline.yml
    - template: linux-arm-x64/build.pipeline.yml
    - template: ubuntu-x64/build.pipeline.yml
    - template: win-x64/build.pipeline.yml
    - template: windows/build.pipeline.yml

  - stage: docker_publish
    dependsOn: 
      - build_artifacts
      - test_stage
    condition: succeeded()
    displayName: 'Publish Docker artifacts'
    jobs:
    - template: './docker-container/publish/beta.publish.yml'

  - stage: github_publish
    dependsOn: 
      - build_artifacts
      - test_stage
    condition: succeeded()
    displayName: 'Publish GitHub artifacts'
    jobs:
    - job:
      displayName: 'Create GitHub Releases'
      steps:
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Debian
            artifactName: EmbyStat-$(package.debian-x64)-v$(GitVersion.SemVer)
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Fedora
            artifactName: EmbyStat-$(package.fedora-x64)-v$(GitVersion.SemVer)
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Linux ARM
            artifactName: EmbyStat-$(package.linux-arm)-v$(GitVersion.SemVer)
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Linux ARM64
            artifactName: EmbyStat-$(package.linux-arm-x64)-v$(GitVersion.SemVer)
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Ubuntu
            artifactName: EmbyStat-$(package.ubuntu-x64)-v$(GitVersion.SemVer)
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Windows x64
            artifactName: EmbyStat-$(package.win10-x64)-v$(Build.BuildNumber)
        - template: '../../templates/download.artifact.yml'
          parameters:
            systemName: Windows Installer
            artifactName: EmbyStat-installer-win-x64-v$(GitVersion.SemVer)
        - task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Build-Zip.Xpirit-Vsts-Build-Zip.ZipDirectory@1
          displayName: 'Zip releases'
          inputs:
            ItemSpec: |
            $(System.ArtifactsDirectory)/EmbyStat-$(package.debian-x64)-v$(GitVersion.SemVer)
            $(System.ArtifactsDirectory)/EmbyStat-$(package.fedora-x64)-v$(GitVersion.SemVer)
            $(System.ArtifactsDirectory)/EmbyStat-$(package.linux-arm)-v$(GitVersion.SemVer)
            $(System.ArtifactsDirectory)/EmbyStat-$(package.linux-arm-x64)-v$(GitVersion.SemVer)
            $(System.ArtifactsDirectory)/EmbyStat-$(package.ubuntu-x64)-v$(GitVersion.SemVer)
            $(System.ArtifactsDirectory)/EmbyStat-$(package.win10-x64)-v$(Build.BuildNumber)
        - task: marcelo-formentao.github-tools.github-release-publish-task.GitHubReleasePublish@1
          displayName: 'Create GitHub release'
          inputs:
            githubEndpoint: mregniGitHubConnection
            githubRepository: mregni/EmbyStat
            githubTag: '$(Build.BuildNumber)'
            githubReleaseTitle: 'v$(Build.BuildNumber)'
            githubReleaseNotes: '### Changes'
            githubReleasePrerelease: true
            githubReleaseAsset: |
              $(System.ArtifactsDirectory)/**/*.zip
              $(System.ArtifactsDirectory)/**/EmbyStat_*_windows-x64.exe
  - stage: rollbar
    dependsOn: 
      - github_publish
      - docker_publish
    jobs:
      - job: rollbar_publish
        displayName: 'Publish info to Rollbar'
        condition: succeeded()
        variables:
          GitVersion.SemVer: $[stageDependencies.test_stage.main_build.outputs['setSemVer.SemVer'] ]
        steps:
          - powershell: |
              $environment = 'beta'
              $postParams = @{
                  access_token="$(rollbar.key)";
                  environment="$environment";
                  revision="$(GitVersion.SemVer)";
                  local_username="MikhaÃ«l Regni";
                  status="succeeded";
                }
                Invoke-WebRequest -Uri https://api.rollbar.com/api/1/deploy -Method POST -UseBasicParsing -Body $postParams
            displayName: 'Publishing deploy on Rollbar'






[{"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\index.tsx":"1","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\App.tsx":"2","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\i18n.tsx":"3","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\index.tsx":"4","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\SettingsSlice.tsx":"5","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\JobSlice.tsx":"6","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\container\\LoggedIn.tsx":"7","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\SnackbarUtilsConfigurator.tsx":"8","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\providers\\SignalRConnectionProvider.tsx":"9","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\pageLoader\\index.tsx":"10","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\styles\\theme\\index.tsx":"11","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\RootReducer.tsx":"12","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\index.tsx":"13","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\SettingsService.tsx":"14","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\JobService.tsx":"15","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\providers\\UpdateProvider.tsx":"16","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\AccountService.tsx":"17","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\JobLogsSlice.tsx":"18","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\ServerStatusSlice.tsx":"19","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\Helpers\\MoviesLoader.tsx":"20","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\Helpers\\ShowsLoader.tsx":"21","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\ShowSlice.tsx":"22","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\MovieSlice.tsx":"23","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\index.tsx":"24","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\login\\index.tsx":"25","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\home\\index.tsx":"26","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\logs\\index.tsx":"27","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\mediaServer\\index.tsx":"28","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\notFound\\index.tsx":"29","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\privateRoute\\index.tsx":"30","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesGeneral\\index.tsx":"31","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesList\\index.tsx":"32","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesGraphs\\index.tsx":"33","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\ShowsGraphs\\index.tsx":"34","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\ShowsGeneral\\index.tsx":"35","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\ShowsList\\index.tsx":"36","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\axiosInstance.tsx":"37","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\index.tsx":"38","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\MovieSettings\\index.tsx":"39","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\ShowService.tsx":"40","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\MovieService.tsx":"41","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\menu\\index.tsx":"42","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\WizardSlice.tsx":"43","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\CalculateRunTime.tsx":"44","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\MediaServerUrlUtil.tsx":"45","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\MovieSettings\\StatisticsCard.tsx":"46","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\embystat\\index.tsx":"47","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\MovieSettings\\MovieLibraryCard.tsx":"48","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\LanguageCard.tsx":"49","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\TvdbCard.tsx":"50","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\RollbarCard.tsx":"51","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\graphs\\BarGraph.tsx":"52","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\UserDetailCard.tsx":"53","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\graphs\\PieGraph.tsx":"54","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\statisticsLoader\\index.tsx":"55","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\cards\\BasicCard.tsx":"56","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\cards\\TopListCard.tsx":"57","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\filters\\movieFilters.tsx":"58","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureLibraries\\index.tsx":"59","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\testServer\\index.tsx":"60","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\finish\\index.tsx":"61","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\intro\\index.tsx":"62","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\index.tsx":"63","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\userDetails\\index.tsx":"64","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\index.tsx":"65","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\hooks\\index.tsx":"66","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\SettingsCard.tsx":"67","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesList\\MovieFilterDialog\\index.tsx":"68","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesList\\MovieTable\\index.tsx":"69","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\index.tsx":"70","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\GetMediaServerTypeString.tsx":"71","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\menu\\MenuItem\\index.tsx":"72","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\CalculateFileSize.tsx":"73","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\StringToIconUtil.tsx":"74","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\ServerForm.tsx":"75","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\ServerResult.tsx":"76","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\MediaServerService.tsx":"77","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\JwtPayloadCustom.tsx":"78","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\ChangeUserNameRequest.tsx":"79","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\UserRoles.tsx":"80","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\User.tsx":"81","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\ChangePasswordRequest.tsx":"82","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\hooks\\useServerType.tsx":"83","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\AuthenticateResponse.tsx":"84","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\librarySelector\\index.tsx":"85","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\LoginView.tsx":"86","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\LanguageSlice.tsx":"87","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\loading\\index.tsx":"88","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\tables\\SortLabel.tsx":"89","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\ServerCard.tsx":"90","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterPicker\\index.tsx":"91","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\flag\\index.tsx":"92","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterRadioButton\\index.tsx":"93","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterTextField\\index.tsx":"94","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterNumberField\\index.tsx":"95","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterDropdownField\\index.tsx":"96","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterDateRangeField\\index.tsx":"97","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterDateField\\index.tsx":"98","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterBetweenField\\index.tsx":"99","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\testServer\\TestFailed.tsx":"100","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\testServer\\TestSuccessFul.tsx":"101","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\embystat\\ServerState.tsx":"102","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\FilterService.tsx":"103","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\inputs\\select\\EmbyStatSelect.tsx":"104","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\mediaServerHeader\\index.tsx":"105","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\LogService.tsx":"106","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\login\\RecoverPasswordForm.tsx":"107","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\login\\LoginForm.tsx":"108","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\JobLogs\\index.tsx":"109","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\JobItem\\index.tsx":"110","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\buttons\\RoundIconButton.tsx":"111","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\JobSettingsDialog\\index.tsx":"112","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\buttons\\SaveButton.tsx":"113"},{"size":1304,"mtime":1597905440337,"results":"114","hashOfConfig":"115"},{"size":2273,"mtime":1609700154577,"results":"116","hashOfConfig":"115"},{"size":1297,"mtime":1597905440336,"results":"117","hashOfConfig":"115"},{"size":604,"mtime":1597905440544,"results":"118","hashOfConfig":"115"},{"size":2046,"mtime":1609893130976,"results":"119","hashOfConfig":"115"},{"size":1173,"mtime":1597905440546,"results":"120","hashOfConfig":"115"},{"size":8049,"mtime":1609700154580,"results":"121","hashOfConfig":"115"},{"size":1248,"mtime":1597905440542,"results":"122","hashOfConfig":"115"},{"size":3313,"mtime":1597905440525,"results":"123","hashOfConfig":"115"},{"size":872,"mtime":1597905440466,"results":"124","hashOfConfig":"115"},{"size":2143,"mtime":1609700154671,"results":"125","hashOfConfig":"115"},{"size":764,"mtime":1597905440549,"results":"126","hashOfConfig":"115"},{"size":7464,"mtime":1609706787522,"results":"127","hashOfConfig":"115"},{"size":1025,"mtime":1597905440533,"results":"128","hashOfConfig":"115"},{"size":741,"mtime":1597905440529,"results":"129","hashOfConfig":"115"},{"size":2383,"mtime":1597905440525,"results":"130","hashOfConfig":"115"},{"size":5290,"mtime":1609705929376,"results":"131","hashOfConfig":"115"},{"size":920,"mtime":1597905440546,"results":"132","hashOfConfig":"115"},{"size":1525,"mtime":1597905440550,"results":"133","hashOfConfig":"115"},{"size":2101,"mtime":1599635334428,"results":"134","hashOfConfig":"115"},{"size":2066,"mtime":1599635334442,"results":"135","hashOfConfig":"115"},{"size":1334,"mtime":1597905440552,"results":"136","hashOfConfig":"115"},{"size":1387,"mtime":1597905440547,"results":"137","hashOfConfig":"115"},{"size":1022,"mtime":1597905440341,"results":"138","hashOfConfig":"115"},{"size":2193,"mtime":1609703367054,"results":"139","hashOfConfig":"115"},{"size":1052,"mtime":1597905440340,"results":"140","hashOfConfig":"115"},{"size":3790,"mtime":1597905440347,"results":"141","hashOfConfig":"115"},{"size":3519,"mtime":1597905440349,"results":"142","hashOfConfig":"115"},{"size":156,"mtime":1597905440357,"results":"143","hashOfConfig":"115"},{"size":1451,"mtime":1597905440467,"results":"144","hashOfConfig":"115"},{"size":2577,"mtime":1609714797091,"results":"145","hashOfConfig":"115"},{"size":3350,"mtime":1609700153531,"results":"146","hashOfConfig":"115"},{"size":834,"mtime":1609700153534,"results":"147","hashOfConfig":"115"},{"size":1224,"mtime":1597905440370,"results":"148","hashOfConfig":"115"},{"size":1594,"mtime":1597905440368,"results":"149","hashOfConfig":"115"},{"size":5263,"mtime":1609706168863,"results":"150","hashOfConfig":"115"},{"size":1301,"mtime":1597905440526,"results":"151","hashOfConfig":"115"},{"size":856,"mtime":1597905440358,"results":"152","hashOfConfig":"115"},{"size":486,"mtime":1597905440362,"results":"153","hashOfConfig":"115"},{"size":487,"mtime":1609700153582,"results":"154","hashOfConfig":"115"},{"size":1151,"mtime":1609700153565,"results":"155","hashOfConfig":"115"},{"size":5812,"mtime":1609706051748,"results":"156","hashOfConfig":"115"},{"size":5221,"mtime":1609700154667,"results":"157","hashOfConfig":"115"},{"size":159,"mtime":1597905440539,"results":"158","hashOfConfig":"115"},{"size":1489,"mtime":1599635334447,"results":"159","hashOfConfig":"115"},{"size":3014,"mtime":1609704756824,"results":"160","hashOfConfig":"115"},{"size":30,"mtime":1597905440480,"results":"161","hashOfConfig":"115"},{"size":2674,"mtime":1597905440364,"results":"162","hashOfConfig":"115"},{"size":2599,"mtime":1607011814566,"results":"163","hashOfConfig":"115"},{"size":2582,"mtime":1609704716860,"results":"164","hashOfConfig":"115"},{"size":1858,"mtime":1597905440360,"results":"165","hashOfConfig":"115"},{"size":1857,"mtime":1597905440457,"results":"166","hashOfConfig":"115"},{"size":6461,"mtime":1609704749085,"results":"167","hashOfConfig":"115"},{"size":1555,"mtime":1597905440457,"results":"168","hashOfConfig":"115"},{"size":4210,"mtime":1609700154664,"results":"169","hashOfConfig":"115"},{"size":2777,"mtime":1597905440443,"results":"170","hashOfConfig":"115"},{"size":4732,"mtime":1609715156678,"results":"171","hashOfConfig":"115"},{"size":13388,"mtime":1599635334464,"results":"172","hashOfConfig":"115"},{"size":2964,"mtime":1597905440372,"results":"173","hashOfConfig":"115"},{"size":4142,"mtime":1609700154596,"results":"174","hashOfConfig":"115"},{"size":4810,"mtime":1599635334436,"results":"175","hashOfConfig":"115"},{"size":3995,"mtime":1609700154593,"results":"176","hashOfConfig":"115"},{"size":4927,"mtime":1609707346666,"results":"177","hashOfConfig":"115"},{"size":3936,"mtime":1609704882722,"results":"178","hashOfConfig":"115"},{"size":245,"mtime":1609705531609,"results":"179","hashOfConfig":"115"},{"size":34,"mtime":1597905440471,"results":"180","hashOfConfig":"115"},{"size":1601,"mtime":1597905440365,"results":"181","hashOfConfig":"115"},{"size":1313,"mtime":1609700153532,"results":"182","hashOfConfig":"115"},{"size":13364,"mtime":1609796847774,"results":"183","hashOfConfig":"115"},{"size":4832,"mtime":1597905440454,"results":"184","hashOfConfig":"115"},{"size":237,"mtime":1597905440540,"results":"185","hashOfConfig":"115"},{"size":4329,"mtime":1597905440464,"results":"186","hashOfConfig":"115"},{"size":399,"mtime":1597905440538,"results":"187","hashOfConfig":"115"},{"size":1224,"mtime":1597905440543,"results":"188","hashOfConfig":"115"},{"size":9582,"mtime":1609700154589,"results":"189","hashOfConfig":"115"},{"size":1321,"mtime":1609707009534,"results":"190","hashOfConfig":"115"},{"size":2337,"mtime":1597905440531,"results":"191","hashOfConfig":"115"},{"size":121,"mtime":1609705576162,"results":"192","hashOfConfig":"115"},{"size":88,"mtime":1597905440495,"results":"193","hashOfConfig":"115"},{"size":66,"mtime":1597905440499,"results":"194","hashOfConfig":"115"},{"size":49,"mtime":1597905440498,"results":"195","hashOfConfig":"115"},{"size":112,"mtime":1597905440493,"results":"196","hashOfConfig":"115"},{"size":480,"mtime":1597905440474,"results":"197","hashOfConfig":"115"},{"size":93,"mtime":1597905440492,"results":"198","hashOfConfig":"115"},{"size":4353,"mtime":1609700154658,"results":"199","hashOfConfig":"115"},{"size":75,"mtime":1597905440497,"results":"200","hashOfConfig":"115"},{"size":1114,"mtime":1597905440548,"results":"201","hashOfConfig":"115"},{"size":1346,"mtime":1609700732389,"results":"202","hashOfConfig":"115"},{"size":1225,"mtime":1609700166379,"results":"203","hashOfConfig":"115"},{"size":3056,"mtime":1597905440375,"results":"204","hashOfConfig":"115"},{"size":8442,"mtime":1609704890595,"results":"205","hashOfConfig":"115"},{"size":5256,"mtime":1597905440456,"results":"206","hashOfConfig":"115"},{"size":1837,"mtime":1597905440451,"results":"207","hashOfConfig":"115"},{"size":1289,"mtime":1597905440451,"results":"208","hashOfConfig":"115"},{"size":1448,"mtime":1597905440448,"results":"209","hashOfConfig":"115"},{"size":2910,"mtime":1597905440447,"results":"210","hashOfConfig":"115"},{"size":3364,"mtime":1597905440447,"results":"211","hashOfConfig":"115"},{"size":1522,"mtime":1597905440445,"results":"212","hashOfConfig":"115"},{"size":3224,"mtime":1597905440446,"results":"213","hashOfConfig":"115"},{"size":1405,"mtime":1597905440380,"results":"214","hashOfConfig":"115"},{"size":5998,"mtime":1597905440382,"results":"215","hashOfConfig":"115"},{"size":207,"mtime":1597905440481,"results":"216","hashOfConfig":"115"},{"size":418,"mtime":1597905440528,"results":"217","hashOfConfig":"115"},{"size":1210,"mtime":1597905440458,"results":"218","hashOfConfig":"115"},{"size":5638,"mtime":1597905440463,"results":"219","hashOfConfig":"115"},{"size":930,"mtime":1597905440529,"results":"220","hashOfConfig":"115"},{"size":3465,"mtime":1597905440346,"results":"221","hashOfConfig":"115"},{"size":4620,"mtime":1597905440346,"results":"222","hashOfConfig":"115"},{"size":2136,"mtime":1609700154583,"results":"223","hashOfConfig":"115"},{"size":5529,"mtime":1609700154581,"results":"224","hashOfConfig":"115"},{"size":2059,"mtime":1597905440440,"results":"225","hashOfConfig":"115"},{"size":5174,"mtime":1597905440345,"results":"226","hashOfConfig":"115"},{"size":696,"mtime":1597905440442,"results":"227","hashOfConfig":"115"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"ro5rpt",{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"230"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"230"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"230"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"230"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"230"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"230"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"230"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"230"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"230"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"230"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"230"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"230"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"230"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"230"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"230"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"230"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"471"},"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\index.tsx",[],["472","473","474"],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\App.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\i18n.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\SettingsSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\JobSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\container\\LoggedIn.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\SnackbarUtilsConfigurator.tsx",["475"],"import React from 'react';\r\nimport { useSnackbar, OptionsObject, WithSnackbarProps } from 'notistack';\r\n\r\ninterface IProps {\r\n  setUseSnackbarRef: (showSnackbar: WithSnackbarProps) => void;\r\n}\r\n\r\nconst InnerSnackbarUtilsConfigurator: React.FC<IProps> = (props: IProps) => {\r\n  props.setUseSnackbarRef(useSnackbar());\r\n  return null;\r\n};\r\n\r\nlet useSnackbarRef: WithSnackbarProps;\r\nconst setUseSnackbarRef = (useSnackbarRefProp: WithSnackbarProps) => {\r\n  useSnackbarRef = useSnackbarRefProp;\r\n};\r\n\r\nexport const SnackbarUtilsConfigurator = () => {\r\n  return (\r\n    <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef} />\r\n  );\r\n};\r\n\r\nexport default {\r\n  success(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'success' });\r\n  },\r\n  warning(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'warning' });\r\n  },\r\n  info(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'info' });\r\n  },\r\n  error(msg: string, options: OptionsObject = {}) {\r\n    this.toast(msg, { ...options, variant: 'error' });\r\n  },\r\n  toast(msg: string, options: OptionsObject = {}) {\r\n    useSnackbarRef.enqueueSnackbar(msg, options);\r\n  },\r\n};\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\providers\\SignalRConnectionProvider.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\pageLoader\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\styles\\theme\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\RootReducer.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\index.tsx",["476","477","478","479"],"import React, { ReactElement, useState, useEffect, useRef } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nimport UserDetails from \"./pages/userDetails\";\r\nimport Intro from \"./pages/intro\";\r\nimport ConfigureServer from \"./pages/configureServer\";\r\nimport { anyAdmins } from \"../../shared/services/AccountService\";\r\nimport TestServer from \"./pages/testServer\";\r\nimport ConfigureLibraries from \"./pages/configureLibraries\";\r\nimport Finish from \"./pages/finish\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { Settings } from \"../../shared/models/settings\";\r\nimport PageLoader from \"../../shared/components/pageLoader\";\r\nimport { saveSettings } from \"../../store/SettingsSlice\";\r\nimport { RootState } from \"../../store/RootReducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100vh\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(3),\r\n    marginTop: 56,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: 64,\r\n    },\r\n    width: \"100%\",\r\n    zIndex: 1,\r\n  },\r\n  wizard: {\r\n    maxWidth: 1440,\r\n  },\r\n  wizard__stepper: {\r\n    maxWidth: 600,\r\n  },\r\n  wizard__step: {\r\n    minHeight: 650,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: 16,\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n  settings: Settings;\r\n}\r\n\r\nconst Wizard = (props: Props): ReactElement => {\r\n  const { settings, history } = props;\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [disableNext, setDisableNext] = useState(false);\r\n  const [disableBack, setDisableBack] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const userDetailRef = useRef<React.ElementRef<typeof UserDetails>>(null);\r\n  const configureServiceRef = useRef<React.ElementRef<typeof ConfigureServer>>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    const loadAnyAdmin = async () => {\r\n      var result = await anyAdmins();\r\n      if (result) {\r\n        const newSettings = { ...settings };\r\n        newSettings.wizardFinished = true;\r\n        dispatch(saveSettings(newSettings));\r\n        history.push(\"/login\");\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadAnyAdmin();\r\n  }, [settings, history, dispatch]);\r\n\r\n  const handleNext = async () => {\r\n    let validated = true;\r\n    if (activeStep === 1) {\r\n      validated = (await userDetailRef.current?.validate()) ?? false;\r\n    } else if (activeStep === 2) {\r\n      validated = (await configureServiceRef.current?.validate()) ?? false;\r\n    }\r\n\r\n    if (validated) {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <PageLoader />\r\n      ) : (\r\n          <div className={classes.root}>\r\n            <main className={classes.content}>\r\n              <Grid container direction=\"row\" justify=\"center\">\r\n                <Grid item xs={12} md={10} lg={8} className={classes.wizard}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Grid container direction=\"column\">\r\n                        <Grid item className={classes.wizard__step}>\r\n                          {activeStep === 0 ? (\r\n                            <Intro disableBack={setDisableBack} />\r\n                          ) : null}\r\n                          {activeStep === 1 ? (\r\n                            <form autoComplete=\"off\">\r\n                              <UserDetails\r\n                                disableBack={setDisableBack}\r\n                                disableNext={setDisableNext}\r\n                                ref={userDetailRef}\r\n                              />\r\n                            </form>\r\n                          ) : null}\r\n                          {activeStep === 2 ? (\r\n                            <form autoComplete=\"off\">\r\n                              <ConfigureServer\r\n                                disableBack={setDisableBack}\r\n                                disableNext={setDisableNext}\r\n                                ref={configureServiceRef}\r\n                              />\r\n                            </form>\r\n                          ) : null}\r\n                          {activeStep === 3 ? (\r\n                            <TestServer\r\n                              disableBack={setDisableBack}\r\n                              disableNext={setDisableNext}\r\n                            />\r\n                          ) : null}\r\n                          {activeStep === 4 ? (\r\n                            <ConfigureLibraries type=\"movie\" />\r\n                          ) : null}\r\n                          {activeStep === 5 ? (\r\n                            <ConfigureLibraries type=\"show\" />\r\n                          ) : null}\r\n                          {activeStep === 6 ? (\r\n                            <Finish\r\n                              disableNext={setDisableNext}\r\n                              disableBack={setDisableBack}\r\n                            />\r\n                          ) : null}\r\n                        </Grid>\r\n\r\n                        <Grid item container direction=\"row\" justify=\"center\">\r\n                          <Grid item xs={12} className={classes.wizard__stepper}>\r\n                            <MobileStepper\r\n                              variant=\"dots\"\r\n                              steps={7}\r\n                              position=\"static\"\r\n                              activeStep={activeStep}\r\n                              nextButton={\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  onClick={handleNext}\r\n                                  disabled={disableNext}\r\n                                >\r\n                                  <Trans i18nKey=\"COMMON.NEXT\" />\r\n                                  <KeyboardArrowRight />\r\n                                </Button>\r\n                              }\r\n                              backButton={\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  onClick={handleBack}\r\n                                  disabled={disableBack}\r\n                                >\r\n                                  <KeyboardArrowLeft />\r\n                                  {t(\"COMMON.BACK\")}\r\n                                </Button>\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </main>\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Wizard);\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\SettingsService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\JobService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\providers\\UpdateProvider.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\AccountService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\JobLogsSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\ServerStatusSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\Helpers\\MoviesLoader.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\Helpers\\ShowsLoader.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\ShowSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\MovieSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\login\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\home\\index.tsx",["480"],"import React, { ReactElement } from 'react';\r\n\r\nimport construction from '../../shared/assets/images/under-construction.webp';\r\n\r\nconst Home = (): ReactElement => {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to EmbyStat</h1>\r\n      <p>This is a static welcome page (not translated). Currently this is still a work in progress and a lot of stuff is not yet implemented or broken. If you find a bug feel free to log it on <a href=\"https://github.com/mregni/EmbyStat\" rel=\"noopener noreferrer\" target=\"_blank\">https://github.com/mregni/EmbyStat</a></p>\r\n      <p>I did a full remake of the frontend in React (instead of Angular). It has taken me a lot of time but I think that the UI looks better and less buggy. Currently the biggest thing that is missing are shows. They will be re-added in the next beta release soon.</p>\r\n      <p>Any page with the following image is in need of review by me, so it can be buggy.</p>\r\n      <img src={construction} alt=\"work in progress\" width={100} className=\"m-t-16\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\logs\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\mediaServer\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\notFound\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\privateRoute\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesGeneral\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesList\\index.tsx",["481","482","483","484"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\n\r\nimport FilterDrawer from '../../../shared/components/filterDrawer';\r\nimport movieFilters from '../../../shared/filters/movieFilters';\r\nimport { ActiveFilter } from '../../../shared/models/filter';\r\nimport MovieTable from './MovieTable';\r\nimport MovieFilterDialog from './MovieFilterDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    marginRight: 16,\r\n  },\r\n}));\r\n\r\nconst MovieList = () => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [activeFilters, setActiveFilters] = useState<ActiveFilter[]>([]);\r\n  const [filterDialogOpen, setFilterDialogOpen] = useState(false);\r\n\r\n  const handleFilterHide = (id) => {\r\n    const currentFilterIndex = activeFilters.findIndex((x) => x.id === id);\r\n    if (currentFilterIndex !== -1) {\r\n      const newFilters = [...activeFilters];\r\n      newFilters[currentFilterIndex].visible = false;\r\n      setActiveFilters(newFilters);\r\n    }\r\n  };\r\n\r\n  const handleFilterDelete = (id: string) => {\r\n    setActiveFilters(activeFilters.filter((x) => x.id !== id));\r\n  };\r\n\r\n  const addFilter = (filter: ActiveFilter) => {\r\n    setActiveFilters((state) => [...state, filter]);\r\n  };\r\n\r\n  const generateLabel = (filter: ActiveFilter): string => {\r\n    return filter.fieldLabel\r\n      .replace(/\\{0\\}/g, t(filter.operationLabel))\r\n      .replace(/\\{1\\}/g, filter.valueLabel);\r\n  };\r\n\r\n  const openFilterDialog = () => {\r\n    setFilterDialogOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <FilterDrawer\r\n        filterCount={activeFilters.length}\r\n        addFilter={addFilter}\r\n        filterDefinitions={movieFilters}\r\n        clearFilters={() => setActiveFilters([])}\r\n      />\r\n      <Grid item container direction=\"row\" className=\"p-b-16\">\r\n        <Grid item>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {t('COMMON.MOVIES')}\r\n          </Typography>\r\n        </Grid>\r\n        {activeFilters.map((filter: any) => (\r\n          <Grid item key={filter.id}>\r\n            <Zoom\r\n              in={filter.visible}\r\n              onExited={() => handleFilterDelete(filter.id)}\r\n            >\r\n              <Chip\r\n                className=\"m-r-16\"\r\n                label={generateLabel(filter)}\r\n                onDelete={() => handleFilterHide(filter.id)}\r\n              />\r\n            </Zoom>\r\n          </Grid>\r\n        ))}\r\n        {/* <Grid item>\r\n          <Chip\r\n            icon={<AddRoundedIcon />}\r\n            label=\"Add filter\"\r\n            clickable\r\n            color=\"primary\"\r\n            onClick={openFilterDialog}\r\n          />\r\n        </Grid>*/}\r\n      </Grid>\r\n      <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" className=\"max-height max-width\">\r\n        <MovieTable filters={activeFilters} />\r\n      </Grid>\r\n      <MovieFilterDialog\r\n        setOpen={setFilterDialogOpen}\r\n        open={filterDialogOpen}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesGraphs\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\ShowsGraphs\\index.tsx",["485","486"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { ShowStatistics } from '../../../shared/models/show';\r\nimport BarGraph from '../../../shared/components/graphs/BarGraph';\r\nimport PieGraph from '../../../shared/components/graphs/PieGraph';\r\n\r\ninterface Props {\r\n  statistics: ShowStatistics;\r\n}\r\n\r\ninterface Bar {\r\n  label: string;\r\n  [key: number]: any;\r\n}\r\n\r\nconst ShowsGraphs = (props: Props) => {\r\n  const { statistics } = props;\r\n\r\n  return (\r\n    <Grid container alignItems=\"flex-start\" spacing={3}>\r\n      {statistics.barCharts.map((chart) => {\r\n        return (\r\n          <Grid item xs={12} xl={6} key={uuid()}>\r\n            <Paper elevation={5} className=\"p-16\">\r\n              <BarGraph chart={chart} />\r\n            </Paper>\r\n          </Grid>\r\n        );\r\n      })}\r\n      {statistics.pieCharts.map((chart) => {\r\n        return (\r\n          <Grid item xs={12} md={6} xl={3} key={uuid()}>\r\n            <Paper elevation={5} className=\"p-16\">\r\n              <PieGraph chart={chart} />\r\n            </Paper>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ShowsGraphs;\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\ShowsGeneral\\index.tsx",["487","488"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { ShowStatistics } from '../../../shared/models/show'\r\nimport { TopCard, Card } from '../../../shared/models/common';\r\nimport BasicCard from '../../../shared/components/cards/BasicCard';\r\nimport TopListCard from '../../../shared/components/cards/TopListCard';\r\nimport NoPosterHigh from '../../../shared/assets/images/no-poster.png';\r\nimport NoProfileHigh from '../../../shared/assets/images/no-profile-high.png';\r\n\r\ninterface Props {\r\n  statistics: ShowStatistics;\r\n}\r\n\r\nconst ShowsGeneral = (props: Props) => {\r\n  const { statistics } = props;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" spacing={4}>\r\n      <Grid item container spacing={2}>\r\n        {statistics.cards != null\r\n          ? statistics.cards.map((card: Card) => (\r\n            <Grid item key={card.title}>\r\n              <BasicCard card={card} />\r\n            </Grid>\r\n          )) : null}\r\n        {statistics.people.cards != null\r\n          ? statistics.people.cards.map((card: Card) => (\r\n            <Grid item key={uuid()}>\r\n              <BasicCard card={card} />\r\n            </Grid>\r\n          )) : null}\r\n      </Grid>\r\n      <Grid item container spacing={2}>\r\n        {statistics.topCards != null\r\n          ? statistics.topCards.map((card: TopCard) => (\r\n            <Grid item key={card.title}>\r\n              <TopListCard data={card} fallbackImg={NoPosterHigh} enableBackground />\r\n            </Grid>\r\n          )) : null}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ShowsGeneral\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\shows\\ShowsList\\index.tsx",["489","490","491","492","493","494","495","496","497","498","499","500"],"import React, { useState, useEffect } from 'react';\r\nimport DataGrid, {\r\n  Scrolling,\r\n  Paging,\r\n  Column,\r\n  Sorting,\r\n  MasterDetail,\r\n} from 'devextreme-react/data-grid';\r\nimport * as AspNetData from 'devextreme-aspnet-data-nojquery';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport uuid from 'react-uuid';\r\nimport { useSelector } from 'react-redux';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Flag from '../../../shared/components/flag';\r\nimport FilterDrawer from '../../../shared/components/filterDrawer';\r\nimport { ActiveFilter } from '../../../shared/models/filter';\r\nimport { getItemDetailLink } from '../../../shared/utils/MediaServerUrlUtil';\r\nimport { RootState } from '../../../store/RootReducer';\r\nimport { useServerType } from '../../../shared/hooks';\r\nimport calculateFileSize from '../../../shared/utils/CalculateFileSize';\r\nimport calculateRunTime from '../../../shared/utils/CalculateRunTime';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: 'calc(100vh - 180px)',\r\n  },\r\n  title: {\r\n    marginRight: 16,\r\n  },\r\n  button__padding: {\r\n    paddingTop: 5,\r\n  },\r\n}));\r\n\r\ninterface Props { }\r\n\r\nexport const ShowsList = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [activeFilters, setActiveFilters] = useState<ActiveFilter[]>([]);\r\n  const [dataSource, setDataSource] = useState<CustomStore>();\r\n  const settings = useSelector((state: RootState) => state.settings);\r\n  const serverType = useServerType();\r\n\r\n  useEffect(() => {\r\n    setDataSource(\r\n      AspNetData.createStore({\r\n        key: 'id',\r\n        loadUrl: '/api/show/list',\r\n        loadParams: {\r\n          filter: JSON.stringify(\r\n            activeFilters.map((x) => ({\r\n              field: x.field,\r\n              operation: x.operation,\r\n              value: x.value,\r\n            }))\r\n          ),\r\n        },\r\n      })\r\n    );\r\n  }, [activeFilters]);\r\n\r\n  const getTitleValue = (data) => {\r\n    return data.name;\r\n  };\r\n\r\n  const renderLinks = (row) => {\r\n    return (\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          href={getItemDetailLink(settings, row.data.id)}\r\n          target=\"_blank\"\r\n          startIcon={<OpenInNewIcon />}\r\n          classes={{\r\n            outlinedSizeSmall: classes.button__padding\r\n          }}\r\n        >\r\n          {serverType}\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const getGenresValues = (data) => {\r\n    return data.genres.join(', ');\r\n  };\r\n\r\n  const calculateRunTimeValue = (data) => {\r\n    return calculateRunTime(data.runTime);\r\n  };\r\n\r\n  const getCumulativeRunTimeTicks = (data) => {\r\n    return calculateRunTime(data.cumulativeRunTimeTicks)\r\n  }\r\n\r\n  const RenderEpisodesCount = (data) => {\r\n    return `${data.collectedEpisodeCount} + ${data.missingEpisodesCount} + (${data.specialEpisodeCount})`\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item>\r\n        <DataGrid\r\n          elementAttr={{\r\n            class: classes.container,\r\n          }}\r\n          dataSource={{ store: dataSource }}\r\n          showBorders={true}\r\n          remoteOperations={true}\r\n          wordWrapEnabled={true}\r\n          rowAlternationEnabled={true}\r\n          allowColumnResizing={true}\r\n          columnAutoWidth={true}\r\n          columnResizingMode=\"nextColumn\"\r\n        >\r\n          <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" />\r\n          <Paging pageSize=\"100\" />\r\n          <Sorting mode=\"single\" />\r\n\r\n          <Column\r\n            dataField=\"sortName\"\r\n            caption={t('COMMON.TITLE')}\r\n            width=\"300\"\r\n            calculateCellValue={getTitleValue}\r\n            defaultSortIndex={0}\r\n            defaultSortOrder=\"asc\"\r\n          />\r\n          <Column\r\n            caption={t('COMMON.GENRES')}\r\n            calculateCellValue={getGenresValues}\r\n            allowSorting={false}\r\n          />\r\n          <Column\r\n            dataField=\"ended\"\r\n            caption={t('COMMON.STATUS')}\r\n            dataType=\"string\"\r\n          />\r\n          <Column\r\n            caption={t('COMMON.RUNTIME')}\r\n            calculateCellValue={getCumulativeRunTimeTicks}\r\n            allowSorting={false}\r\n          />\r\n          <Column\r\n            caption={t('COMMON.RUNTIME')}\r\n            calculateCellValue={calculateRunTimeValue}\r\n            allowSorting={false}\r\n          />\r\n          <Column\r\n            caption={t('COMMON.EPISODES')}\r\n            calculateCellValue={RenderEpisodesCount}\r\n            allowSorting={false}\r\n          />\r\n          <Column\r\n            caption={t('COMMON.OFFICIALRATING')}\r\n            dataField=\"officialRating\"\r\n          />\r\n          <Column\r\n            caption={t('COMMON.LINKS')}\r\n            cellRender={renderLinks}\r\n            allowSorting={false}\r\n            alignment=\"right\"\r\n          />\r\n        </DataGrid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ShowsList;","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\axiosInstance.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\MovieSettings\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\ShowService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\MovieService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\menu\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\WizardSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\CalculateRunTime.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\MediaServerUrlUtil.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\MovieSettings\\StatisticsCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\embystat\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\MovieSettings\\MovieLibraryCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\LanguageCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\TvdbCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\RollbarCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\graphs\\BarGraph.tsx",["501","502"],"import {\r\n  Animation,\r\n  ArgumentAxis,\r\n  Chart as BarChart,\r\n  CommonSeriesSettings,\r\n  Font,\r\n  Format,\r\n  Label,\r\n  Legend,\r\n  LoadingIndicator,\r\n  Margin,\r\n  Series,\r\n  Title,\r\n  ValueAxis,\r\n  Tooltip\r\n} from 'devextreme-react/chart';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\n\r\nimport { Chart } from '../../models/common';\r\n\r\ninterface Props {\r\n  chart: Chart;\r\n  theme: Theme;\r\n}\r\n\r\nconst BarGraph = (props: Props) => {\r\n  const { chart, theme } = props;\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <BarChart\r\n      palette=\"Soft Blue\"\r\n      paletteExtensionMode=\"blend\"\r\n      dataSource={JSON.parse(chart.dataSets)}\r\n    >\r\n      <CommonSeriesSettings\r\n        argumentField=\"Label\"\r\n        type=\"bar\"\r\n        hoverMode=\"allArgumentPoints\"\r\n        selectionMode=\"allArgumentPoints\"\r\n      >\r\n        <Label visible={true}>\r\n          <Format type=\"fixedPoint\" precision={0} />\r\n        </Label>\r\n      </CommonSeriesSettings>\r\n      <Title text={t(chart.title)} horizontalAlignment=\"center\">\r\n        <Font size={30} color={theme.palette.primary.main} />\r\n        <Margin top={25} />\r\n      </Title>\r\n      <Series valueField=\"Val0\" name={t(chart.title)} />\r\n      <ValueAxis position=\"right\">\r\n        <Title text={t(\"COMMON.COUNT\")} />\r\n      </ValueAxis>\r\n      <ArgumentAxis>\r\n        {\" \"}\r\n        <Label\r\n          displayMode=\"standard\"\r\n          rotationAngle={45}\r\n          overlappingBehavior=\"rotate\"\r\n        />\r\n      </ArgumentAxis>\r\n      <Legend visible={false} />\r\n      <LoadingIndicator enabled={true} />\r\n      <Animation easing=\"linear\" duration={500} maxPointCountSupported={100} />\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default withTheme(BarGraph);\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\GeneralSettings\\UserDetailCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\graphs\\PieGraph.tsx",["503","504"],"import PieChart, {\r\n  Legend,\r\n  Series,\r\n  Tooltip,\r\n  Format,\r\n  Label,\r\n  Connector,\r\n  Title,\r\n  Font,\r\n  Margin,\r\n  Animation,\r\n  LoadingIndicator\r\n} from 'devextreme-react/pie-chart';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\n\r\nimport { Chart } from '../../models/common';\r\n\r\ninterface Props {\r\n  chart: Chart;\r\n  theme: Theme;\r\n}\r\n\r\nconst PieGraph = (props: Props) => {\r\n  const { chart, theme } = props;\r\n  const { t } = useTranslation();\r\n\r\n  const customizeTooltip = (arg) => {\r\n    return {\r\n      text: `${arg.valueText} - ${(arg.percentText)}`\r\n    };\r\n  }\r\n\r\n  return (\r\n    <PieChart\r\n      type=\"doughnut\"\r\n      palette=\"Soft Blue\"\r\n      dataSource={JSON.parse(chart.dataSets)}\r\n    >\r\n      <Series argumentField=\"Label\" valueField=\"Val0\">\r\n        <Label visible={true}>\r\n          <Connector visible={true} />\r\n        </Label>\r\n      </Series>\r\n      <Legend\r\n        horizontalAlignment=\"right\"\r\n        verticalAlignment=\"top\"\r\n      />\r\n      <Tooltip enabled={true} customizeTooltip={customizeTooltip} />\r\n      <Title text={t(chart.title)} horizontalAlignment=\"center\">\r\n        <Font size={30} color={theme.palette.primary.main} />\r\n        <Margin top={25} />\r\n      </Title>\r\n      <Animation easing=\"linear\" duration={500} maxPointCountSupported={100} />\r\n      <LoadingIndicator enabled={true} />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default withTheme(PieGraph);\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\statisticsLoader\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\cards\\BasicCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\cards\\TopListCard.tsx",["505","506","507"],"import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport uuid from 'react-uuid';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { TopCard, TopCardItem } from '../../models/common';\r\nimport { RootState } from '../../../store/RootReducer';\r\nimport getFullMediaServerUrl, { getItemDetailLink, getBackdropImageLink, getPrimaryImageLink } from '../../utils/MediaServerUrlUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: 375,\r\n    height: 138,\r\n  },\r\n  container__background: (props: any) => ({\r\n    backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.7)), url(${props.backdrop})`,\r\n    backgroundPosition: 'top',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n  }),\r\n  poster: {\r\n    height: 138,\r\n    '& img': {\r\n      borderTopLeftRadius: 4,\r\n      borderBottomLeftRadius: 4,\r\n    },\r\n  },\r\n  info: {\r\n    marginLeft: 8,\r\n    marginTop: 8,\r\n    width: 'calc(100% - 108px)',\r\n  },\r\n  title: {\r\n    marginBottom: 16,\r\n    textTransform: 'uppercase',\r\n    fontWeight: 700,\r\n  },\r\n  details: {\r\n    fontSize: '0.8rem',\r\n    fontStyle: 'italic',\r\n  },\r\n  secondaryColor: {\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: 700,\r\n  },\r\n  link: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    '& a': {\r\n      color: 'inherit',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  data: TopCard;\r\n  fallbackImg: string;\r\n  enableBackground: boolean;\r\n}\r\n\r\nconst TopListCard = (props: Props) => {\r\n  const { data, fallbackImg, enableBackground } = props;\r\n  const { t } = useTranslation();\r\n  const [hoveredItem, setHoveredItem] = useState<TopCardItem>(data.values[0]);\r\n\r\n  console.log(data);\r\n\r\n  const settings = useSelector((state: RootState) => state.settings);\r\n  const classes = useStyles({ backdrop: getBackdropImageLink(settings, hoveredItem?.mediaId ?? data.values[0]?.mediaId ?? \"\") });\r\n\r\n  const calculateTime = (date: string): string => {\r\n    return moment(date).format('l');\r\n  };\r\n\r\n  const calculateMinutes = (ticks: string): number => {\r\n    return Math.round(parseInt(ticks) / 600000000);\r\n  };\r\n\r\n  const addDefaultSrc = (e) => {\r\n    e.target.src = fallbackImg\r\n  }\r\n\r\n  return (\r\n    <Zoom in={true}>\r\n      <Paper elevation={5} className={classNames(classes.container, { [classes.container__background]: enableBackground })}>\r\n        <Grid container direction=\"row\">\r\n          <Grid item className={classes.poster}>\r\n            <img\r\n              src={getPrimaryImageLink(settings, hoveredItem.mediaId, hoveredItem.image)}\r\n              alt=\"poster\"\r\n              width=\"92\"\r\n              height=\"138\"\r\n              onError={addDefaultSrc} />\r\n          </Grid>\r\n          <Grid item className={classes.info} container direction=\"column\">\r\n            <Grid\r\n              item\r\n              container\r\n              justify=\"space-between\"\r\n              className={classes.title}\r\n            >\r\n              <Grid item>{t(data.title)}</Grid>\r\n              <Grid item className={classes.secondaryColor}>\r\n                {data.unitNeedsTranslation ? t(data.unit) : data.unit}\r\n              </Grid>\r\n            </Grid>\r\n            {data.values.map((pair) => (\r\n              <Grid\r\n                item\r\n                container\r\n                justify=\"space-between\"\r\n                key={uuid()}\r\n                className={classes.details}\r\n                onMouseOver={() => setHoveredItem(pair)}\r\n              >\r\n                <Grid item className={classes.link}>\r\n                  <a\r\n                    href={`${getItemDetailLink(settings, pair.mediaId)}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {pair.label.length > 35 ? t(pair.label).substr(0, 32) + '...' : t(pair.label)}\r\n                  </a>\r\n                </Grid>\r\n                <Grid item className={classes.secondaryColor}>\r\n                  {data.valueType === 0 ? pair.value : null}\r\n                  {data.valueType === 1 ? calculateMinutes(pair.value) : null}\r\n                  {data.valueType === 2 ? calculateTime(pair.value) : null}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Zoom>\r\n  );\r\n};\r\n\r\nTopListCard.defaultProps = {\r\n  enableBackground: false,\r\n}\r\n\r\nexport default TopListCard;\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\filters\\movieFilters.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureLibraries\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\testServer\\index.tsx",["508","509","510","511"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport {\r\n  testApiKey,\r\n  getServerInfo,\r\n  getAdministrators,\r\n  getLibraries,\r\n} from \"../../../../shared/services/MediaServerService\";\r\nimport { RootState } from \"../../../../store/RootReducer\";\r\nimport {\r\n  MediaServerLogin,\r\n  MediaServerInfo,\r\n  MediaServerUser,\r\n  Library,\r\n} from \"../../../../shared/models/mediaServer\";\r\nimport TestFailed from \"./TestFailed\";\r\nimport TestSuccessful from \"./TestSuccessFul\";\r\nimport Loading from \"../../../../shared/components/loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  full_height: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  disableBack: Function;\r\n  disableNext: Function;\r\n}\r\n\r\nconst TestServer = (props: Props) => {\r\n  const { disableBack, disableNext } = props;\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [loadingLabel, setLoadingLabel] = useState(\"WIZARD.STEPONE\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [serverInfo, setServerInfo] = useState({} as MediaServerInfo);\r\n  const [administrators, setAdministrators] = useState({} as MediaServerUser[]);\r\n  const [libraries, setLibraries] = useState({} as Library[]);\r\n\r\n  const wizard = useSelector((state: RootState) => state.wizard);\r\n  useEffect(() => {\r\n    const performSteps = async () => {\r\n      const protocolTxt = wizard.serverProtocol === 0 ? \"https://\" : \"http://\";\r\n      const address = wizard.serverAddress;\r\n      const port = wizard.serverPort;\r\n      const baseUrl = wizard?.serverBaseurl ?? \"\";\r\n      const fullAddress = `${protocolTxt}${address}:${port}${baseUrl}`;\r\n\r\n      if (currentStep === 1) {\r\n        const result = await testApiKey({\r\n          address: fullAddress,\r\n          apiKey: wizard.apiKey,\r\n          type: wizard.serverType,\r\n        } as MediaServerLogin);\r\n\r\n        if (result == null) {\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n\r\n        if (result) {\r\n          setCurrentStep(2);\r\n          setLoadingLabel(\"WIZARD.STEPTWO\");\r\n          const serverInfo = await getServerInfo(true);\r\n          if (serverInfo == null) {\r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n          setServerInfo(serverInfo);\r\n\r\n          setCurrentStep(3);\r\n          setLoadingLabel(\"WIZARD.STEPTHREE\");\r\n          const admins = await getAdministrators();\r\n          if (admins == null) {\r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n          setAdministrators(admins);\r\n\r\n          setCurrentStep(4);\r\n          setLoadingLabel(\"WIZARD.STEPFOUR\");\r\n          const libs = await getLibraries();\r\n          if (libs == null) {\r\n            setIsLoading(false);\r\n            return;\r\n          }\r\n          setLibraries(libs);\r\n          setIsLoading(false);\r\n        } else {\r\n          setErrorMessage(\"WIZARD.APIKEYFAILED\");\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    performSteps();\r\n  }, [currentStep, wizard, isLoading]);\r\n\r\n  useEffect(() => {\r\n    disableBack(isLoading);\r\n  }, [isLoading, disableBack]);\r\n\r\n  useEffect(() => {\r\n    disableNext(isLoading || errorMessage !== \"\");\r\n  }, [isLoading, disableNext, errorMessage]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" color=\"primary\">\r\n        <Trans i18nKey=\"WIZARD.SERVERCONFIGURATIONTEST\" />\r\n      </Typography>\r\n      <Loading\r\n        className=\"m-t-32\"\r\n        loading={isLoading}\r\n        label={t(loadingLabel, { step: currentStep, total: 4 })}\r\n        errorMessage={errorMessage}\r\n        serverInfo={serverInfo}\r\n        administrators={administrators}\r\n        wizard={wizard}\r\n        libraries={libraries}\r\n        Component={errorMessage === \"\" ? TestSuccessful : TestFailed}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestServer;\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\finish\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\intro\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\userDetails\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\hooks\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\settings\\SettingsCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesList\\MovieFilterDialog\\index.tsx",["512","513","514","515"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface Props {\r\n  setOpen: (state: boolean) => void;\r\n  open: boolean;\r\n}\r\n\r\nconst MovieFilterDialog = (props: Props) => {\r\n  const { setOpen, open } = props;\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState<DialogProps['maxWidth']>('sm');\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\">Add new filter</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)} color=\"primary\">\r\n          Add filter\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default MovieFilterDialog\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\movies\\MoviesList\\MovieTable\\index.tsx",["516","517"],"import React, { useState, useEffect, useCallback, ReactElement } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport uuid from 'react-uuid';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport KeyboardArrowUpRoundedIcon from '@material-ui/icons/KeyboardArrowUpRounded';\r\nimport KeyboardArrowDownRoundedIcon from '@material-ui/icons/KeyboardArrowDownRounded';\r\n\r\nimport calculateFileSize from '../../../../shared/utils/CalculateFileSize';\r\nimport DetailMovieTemplate from '../DetailMovieTemplate';\r\nimport { getItemDetailLink } from '../../../../shared/utils/MediaServerUrlUtil';\r\nimport Flag from '../../../../shared/components/flag';\r\nimport { RootState } from '../../../../store/RootReducer';\r\nimport { useServerType } from '../../../../shared/hooks';\r\nimport { MovieRow } from '../../../../shared/models/movie';\r\nimport SortLabel from '../../../../shared/components/tables/SortLabel';\r\n\r\nimport { getMoviePage } from '../../../../shared/services/MovieService';\r\nimport { TablePage } from '../../../../shared/models/common';\r\nimport { ActiveFilter } from '../../../../shared/models/filter';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    maxHeight: 'calc(100vh - 232px)',\r\n  },\r\n  paper__root: {\r\n    width: '100%',\r\n    height: 'calc(100vh - 155px)',\r\n    padding: 16,\r\n  },\r\n  stickyHeader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  filters: ActiveFilter[];\r\n}\r\n\r\nconst MovieTable = (props: Props) => {\r\n  const { filters } = props;\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(100);\r\n  const [page, setPage] = useState(0);\r\n  const [orderedBy, setOrderedBy] = useState('sortName');\r\n  const [tableData, setTableData] = useState<TablePage<MovieRow>>({ data: [], totalCount: 0 });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  type Order = 'asc' | 'desc';\r\n  const [order, setOrder] = useState<Order>('asc');\r\n\r\n  const fetchRows = useCallback(\r\n    (page: number, rowsPerPage: number, order: string, orderedBy: string, filters: string) => {\r\n      setLoading(true);\r\n      setTableData({ data: [], totalCount: 0 });\r\n      getMoviePage(page * rowsPerPage, rowsPerPage, orderedBy, order, true, filters)\r\n        .then((data: TablePage<MovieRow>) => {\r\n          setTableData(data);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    const filtersJson = JSON.stringify(\r\n      filters?.map((x) => ({\r\n        field: x.field,\r\n        operation: x.operation,\r\n        value: x.value,\r\n      })));\r\n    fetchRows(page, rowsPerPage, order, orderedBy, filtersJson);\r\n  }, [page, rowsPerPage, order, orderedBy, fetchRows, filters]);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, tableData.totalCount - page * rowsPerPage);\r\n  const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n    const isAsc = orderedBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderedBy(property);\r\n  };\r\n\r\n  type head = {\r\n    label: string,\r\n    field: string,\r\n    sortable: boolean,\r\n    width?: number | undefined,\r\n    align: 'right' | 'left',\r\n  }\r\n  const headers: head[] = [\r\n    { label: \"\", field: \"\", sortable: false, width: 30, align: 'left' },\r\n    { label: \"COMMON.TITLE\", field: \"sortName\", sortable: true, width: 300, align: 'left' },\r\n    { label: \"COMMON.GENRES\", field: \"\", sortable: false, width: 220, align: 'left' },\r\n    { label: \"COMMON.CONTAINER\", field: \"Container\", sortable: true, align: 'right' },\r\n    { label: \"COMMON.RUNTIME\", field: \"runTimeTicks\", sortable: true, align: 'right' },\r\n    { label: \"COMMON.OFFICIALRATING\", field: \"officielRating\", sortable: true, align: 'right' },\r\n    { label: \"COMMON.HEIGHT\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.WIDTH\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.BITRATE\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.SIZEINMB\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.BITDEPTH\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.CODEC\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.VIDEORANGE\", field: \"\", sortable: false, align: 'right' },\r\n    { label: \"COMMON.RATING\", field: \"communityRating\", sortable: true, align: 'right' },\r\n    { label: \"COMMON.SUBTITLES\", field: \"\", sortable: false, width: 180, align: 'right' },\r\n    { label: \"COMMON.AUDIO\", field: \"\", sortable: false, width: 100, align: 'right' },\r\n    { label: \"COMMON.LINKS\", field: \"\", sortable: false, align: 'right' },\r\n  ]\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Paper className={classes.paper__root}>\r\n        {\r\n          loading ? <div>Loading</div>\r\n            :\r\n            (\r\n              <>\r\n                <TableContainer className={classes.container}>\r\n                  <Scrollbars\r\n                    autoHide\r\n                    autoHideTimeout={1000}\r\n                    autoHideDuration={200}\r\n                    style={{ width: '100%', height: 'calc(100vh - 232px)' }}\r\n                  >\r\n                    <Table\r\n                      stickyHeader\r\n                      size=\"small\"\r\n                    >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {\r\n                            headers.map((column) =>\r\n                              <TableCell\r\n                                width={column.width}\r\n                                key={column.label}\r\n                                classes={{ stickyHeader: classes.stickyHeader }}\r\n                                align={column.align}\r\n                              >\r\n                                {\r\n                                  column.sortable ?\r\n                                    (\r\n                                      <SortLabel\r\n                                        field={column.field}\r\n                                        orderedBy={orderedBy}\r\n                                        order={order}\r\n                                        sortHandler={createSortHandler}\r\n                                        label={column.label}\r\n                                      />\r\n                                    ) : (t(column.label))\r\n                                }\r\n                              </TableCell>\r\n                            )\r\n                          }\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {\r\n                          tableData.data.map((row) => (\r\n                            <Row row={row} key={row.id} />\r\n                          ))}\r\n                        {emptyRows > 0 && (\r\n                          <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Scrollbars>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                  rowsPerPageOptions={[25, 50, 100, { label: 'All', value: tableData.totalCount }]}\r\n                  component=\"div\"\r\n                  count={tableData.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n                  backIconButtonText={t('PAGINATION.PREVIOUSPAGE')}\r\n                  labelRowsPerPage={t('PAGINATION.ROWSPERPAGE')}\r\n                  nextIconButtonText={t('PAGINATION.NEXTPAGE')}\r\n                />\r\n              </>\r\n            )\r\n        }\r\n\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\ninterface RowProps {\r\n  row: MovieRow;\r\n}\r\n\r\nconst useRowStyles = makeStyles((theme: Theme) => ({\r\n  button__padding: {\r\n    paddingTop: 5,\r\n  },\r\n}));\r\n\r\nconst Row = (props: RowProps): ReactElement => {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const { t } = useTranslation();\r\n  const settings = useSelector((state: RootState) => state.settings);\r\n  const serverType = useServerType();\r\n  const classes = useRowStyles();\r\n\r\n  const getSubtitleValues = (subtitles: string[]) => {\r\n    if (subtitles && subtitles.length) {\r\n      return (\r\n        <Grid container justify=\"flex-end\" direction=\"row\">\r\n          {subtitles?.slice(0, 5).map((x) => (\r\n            <Grid item key={uuid()} className=\"m-r-4\">\r\n              <Flag language={x} />\r\n            </Grid>\r\n          ))}\r\n          {subtitles?.length > 5 ? (\r\n            <Grid item>+ {subtitles.length - 5}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n      );\r\n    }\r\n    return (<div />);\r\n  };\r\n\r\n  const getAudioValues = (audioLanguages: string[]) => {\r\n    if (audioLanguages && audioLanguages.length) {\r\n      return (\r\n        <Grid container justify=\"flex-end\">\r\n          {audioLanguages.slice(0, 5).map((x) => (\r\n            <Grid item key={uuid()} className=\"m-r-4\">\r\n              <Flag language={x} />\r\n            </Grid>\r\n          ))}\r\n          {audioLanguages.length > 5 ? (\r\n            <Grid item>+ {audioLanguages.length - 5}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n      );\r\n    }\r\n    return (<div />);\r\n  };\r\n\r\n  const renderLinks = (movieId: string) => {\r\n    return (\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          href={getItemDetailLink(settings, movieId)}\r\n          target=\"_blank\"\r\n          startIcon={<OpenInNewIcon />}\r\n          classes={{\r\n            outlinedSizeSmall: classes.button__padding\r\n          }}\r\n        >\r\n          {serverType}\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow key={row.id} hover>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpRoundedIcon /> : <KeyboardArrowDownRoundedIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n        <TableCell align=\"left\">{row.genres.join(', ')}</TableCell>\r\n        <TableCell align=\"right\">{row.container}</TableCell>\r\n        <TableCell align=\"right\">{row.runTime} {t('COMMON.MIN')}</TableCell>\r\n        <TableCell align=\"right\">{row.officialRating}</TableCell>\r\n        <TableCell align=\"right\">{row.height}</TableCell>\r\n        <TableCell align=\"right\">{row.width}</TableCell>\r\n        <TableCell align=\"right\">{row.bitRate}</TableCell>\r\n        <TableCell align=\"right\">{calculateFileSize(row.sizeInMb)}</TableCell>\r\n        <TableCell align=\"right\">{row.bitDepth}</TableCell>\r\n        <TableCell align=\"right\">{row.codec}</TableCell>\r\n        <TableCell align=\"right\">{row.videoRange}</TableCell>\r\n        <TableCell align=\"right\">{row.communityRating}</TableCell>\r\n        <TableCell align=\"right\">{getSubtitleValues(row.subtitles)}</TableCell>\r\n        <TableCell align=\"right\">{getAudioValues(row.audioLanguages)}</TableCell>\r\n        <TableCell align=\"right\">{renderLinks(row.id)}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={16}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              Testing\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieTable\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\GetMediaServerTypeString.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\menu\\MenuItem\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\CalculateFileSize.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\utils\\StringToIconUtil.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\ServerForm.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\ServerResult.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\MediaServerService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\JwtPayloadCustom.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\ChangeUserNameRequest.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\UserRoles.tsx",["518","519"],"export enum UserRoles {\r\n  Admin = 'admin',\r\n  User = 'user',\r\n}\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\User.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\ChangePasswordRequest.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\hooks\\useServerType.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\AuthenticateResponse.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\librarySelector\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\login\\LoginView.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\store\\LanguageSlice.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\loading\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\tables\\SortLabel.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\configureServer\\ServerCard.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterPicker\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\flag\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterRadioButton\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterTextField\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterNumberField\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterDropdownField\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterDateRangeField\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterDateField\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\filterDrawer\\FilterBetweenField\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\testServer\\TestFailed.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\wizard\\pages\\testServer\\TestSuccessFul.tsx",["520","521","522","523"],"import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  MediaServerInfo,\r\n  MediaServerUser,\r\n  Library,\r\n} from '../../../../shared/models/mediaServer';\r\nimport { Wizard } from '../../../../shared/models/wizard';\r\n\r\nimport EmbyStatSelect from '../../../../shared/components/inputs/select/EmbyStatSelect';\r\nimport MediaServerHeader from '../../../../shared/components/mediaServerHeader';\r\nimport {\r\n  setAdminId,\r\n  setAllLibraries,\r\n  setMediaServerId,\r\n  setServerAddress,\r\n} from '../../../../store/WizardSlice';\r\n\r\ninterface Props {\r\n  serverInfo: MediaServerInfo;\r\n  administrators: MediaServerUser[];\r\n  libraries: Library[];\r\n  wizard: Wizard;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '8px',\r\n    position: 'relative',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 80,\r\n    height: 80,\r\n    padding: '10px',\r\n  },\r\n  server__details__header: {\r\n    color:\r\n      theme.palette.type === 'dark'\r\n        ? theme.palette.grey[400]\r\n        : theme.palette.grey[600],\r\n    fontSize: '0.8rem',\r\n  },\r\n  server__details__name: {\r\n    paddingLeft: '8px',\r\n  },\r\n  server__details__icon: {\r\n    width: '20px',\r\n    position: 'absolute',\r\n    right: 5,\r\n    top: 5,\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  italic: {\r\n    fontStyle: 'italic',\r\n  },\r\n}));\r\n\r\nconst TestSuccessFul = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { serverInfo, administrators, libraries, wizard } = props;\r\n  const [selectedAdmin, setSelectedAdmin] = useState(administrators[0].id);\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setAdminId(selectedAdmin));\r\n  }, [selectedAdmin, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setMediaServerId(serverInfo.id));\r\n  }, [serverInfo, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setAllLibraries(libraries));\r\n  }, [dispatch, libraries]);\r\n\r\n  const adminChanged = (event) => {\r\n    setSelectedAdmin(event.target.value);\r\n  };\r\n\r\n  const generateServerAddress = (): string => {\r\n    const protocol = wizard.serverProtocol === 0 ? 'https://' : 'http://';\r\n    return `${protocol}${wizard.serverAddress}:${wizard.serverPort}${wizard?.serverBaseurl ?? ''}`\r\n  };\r\n\r\n  const [selectedAddress, setSelectedAddress] = useState(generateServerAddress());\r\n  const handleAddressChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelectedAddress(event.target.value as string);\r\n    var addressArray = (event.target.value as string).split('://');\r\n    const protocol = addressArray[0] === 'https' ? 0 : 1;\r\n    const address = addressArray[1].split(':')[0];\r\n    const port = parseInt(addressArray[1].split(':')[1].split('/')[0], 10);\r\n    dispatch(setServerAddress(address, port, protocol));\r\n  };\r\n\r\n  return (\r\n    <Grid item container xs={12} className=\"m-t-32\" direction=\"column\">\r\n      <Grid item>\r\n        <MediaServerHeader\r\n          serverType={wizard.serverType}\r\n          serverInfo={serverInfo}\r\n          serverAddress={generateServerAddress()} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Zoom in={true} style={{ transitionDelay: '300ms' }}>\r\n          <Card\r\n            elevation={7}\r\n            square\r\n            className={classNames(classes.root, 'm-t-32')}\r\n          >\r\n            <CardContent>\r\n              <Grid container direction=\"column\">\r\n                <Grid item>\r\n                  {t('WIZARD.LANWANCHOISE', { type: wizard.serverType === 0 ? \"Emby\" : \"Jellyfin\" })}\r\n                </Grid>\r\n                <Grid item>\r\n                  <Select\r\n                    className=\"m-t-16\"\r\n                    value={selectedAddress}\r\n                    variant=\"standard\"\r\n                    onChange={handleAddressChange}\r\n                  >\r\n                    {\r\n                      generateServerAddress() !== serverInfo.wanAddress && generateServerAddress() !== serverInfo.localAddress\r\n                        ? <MenuItem value={generateServerAddress()}>Current&nbsp;<span className={classes.italic}>({generateServerAddress()})</span></MenuItem>\r\n                        : null\r\n                    }\r\n                    <MenuItem value={serverInfo.wanAddress}>WAN&nbsp;<span className={classes.italic}>({serverInfo.wanAddress})</span></MenuItem>\r\n                    <MenuItem value={serverInfo.localAddress}>LAN&nbsp;<span className={classes.italic}>({serverInfo.localAddress})</span></MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Zoom>\r\n      </Grid>\r\n      <Grid item>\r\n        {wizard.serverType === 1 ? (\r\n          <Zoom in={true} style={{ transitionDelay: '300ms' }}>\r\n            <Card\r\n              elevation={7}\r\n              square\r\n              className={classNames(classes.root, 'm-t-32')}\r\n            >\r\n              <CardContent>\r\n                {t('WIZARD.JELLYFIN.ADMINTEXT')}\r\n                <EmbyStatSelect\r\n                  className=\"m-t-16\"\r\n                  value={selectedAdmin}\r\n                  variant=\"standard\"\r\n                  onChange={adminChanged}\r\n                  menuItems={administrators.map((admin) => {\r\n                    return { id: admin.id, value: admin.id, label: admin.name };\r\n                  })}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Zoom>\r\n        ) : null}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TestSuccessFul;\r\n","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\models\\embystat\\ServerState.tsx",["524","525","526"],"export interface ServerState {\r\n  missedPings: number;\r\n  updating: boolean;\r\n  updateSuccesfull: UpdateSuccessFull;\r\n}\r\n\r\nexport enum UpdateSuccessFull {\r\n  unknown = 0,\r\n  SuccesFull = 1,\r\n  Failed = 2,\r\n}","C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\FilterService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\inputs\\select\\EmbyStatSelect.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\mediaServerHeader\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\services\\LogService.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\login\\RecoverPasswordForm.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\login\\LoginForm.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\JobLogs\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\JobItem\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\buttons\\RoundIconButton.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\pages\\jobs\\JobSettingsDialog\\index.tsx",[],"C:\\Users\\mikha\\source\\repos\\mregni\\EmbyStat\\EmbyStat.Web\\ClientApp\\src\\shared\\components\\buttons\\SaveButton.tsx",[],["527","528","529"],{"ruleId":"530","replacedBy":"531"},{"ruleId":"532","replacedBy":"533"},{"ruleId":"534","replacedBy":"535"},{"ruleId":"536","severity":1,"message":"537","line":24,"column":1,"nodeType":"538","endLine":40,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":3,"column":23,"nodeType":"541","messageId":"542","endLine":3,"endColumn":34},{"ruleId":"543","severity":1,"message":"540","line":3,"column":23,"nodeType":"541","messageId":"542","endLine":3,"endColumn":34},{"ruleId":"539","severity":1,"message":"544","line":24,"column":10,"nodeType":"541","messageId":"542","endLine":24,"endColumn":19},{"ruleId":"543","severity":1,"message":"544","line":24,"column":10,"nodeType":"541","messageId":"542","endLine":24,"endColumn":19},{"ruleId":"545","severity":1,"message":"546","line":10,"column":1,"nodeType":"547","messageId":"548","endLine":10,"endColumn":271},{"ruleId":"539","severity":1,"message":"549","line":8,"column":8,"nodeType":"541","messageId":"542","endLine":8,"endColumn":22},{"ruleId":"543","severity":1,"message":"549","line":8,"column":8,"nodeType":"541","messageId":"542","endLine":8,"endColumn":22},{"ruleId":"539","severity":1,"message":"550","line":51,"column":9,"nodeType":"541","messageId":"542","endLine":51,"endColumn":25},{"ruleId":"543","severity":1,"message":"550","line":51,"column":9,"nodeType":"541","messageId":"542","endLine":51,"endColumn":25},{"ruleId":"539","severity":1,"message":"551","line":14,"column":11,"nodeType":"541","messageId":"542","endLine":14,"endColumn":14},{"ruleId":"543","severity":1,"message":"551","line":14,"column":11,"nodeType":"541","messageId":"542","endLine":14,"endColumn":14},{"ruleId":"539","severity":1,"message":"552","line":10,"column":8,"nodeType":"541","messageId":"542","endLine":10,"endColumn":21},{"ruleId":"543","severity":1,"message":"552","line":10,"column":8,"nodeType":"541","messageId":"542","endLine":10,"endColumn":21},{"ruleId":"539","severity":1,"message":"553","line":7,"column":3,"nodeType":"541","messageId":"542","endLine":7,"endColumn":15},{"ruleId":"543","severity":1,"message":"553","line":7,"column":3,"nodeType":"541","messageId":"542","endLine":7,"endColumn":15},{"ruleId":"539","severity":1,"message":"554","line":14,"column":8,"nodeType":"541","messageId":"542","endLine":14,"endColumn":12},{"ruleId":"543","severity":1,"message":"554","line":14,"column":8,"nodeType":"541","messageId":"542","endLine":14,"endColumn":12},{"ruleId":"539","severity":1,"message":"555","line":19,"column":8,"nodeType":"541","messageId":"542","endLine":19,"endColumn":12},{"ruleId":"543","severity":1,"message":"555","line":19,"column":8,"nodeType":"541","messageId":"542","endLine":19,"endColumn":12},{"ruleId":"539","severity":1,"message":"556","line":20,"column":8,"nodeType":"541","messageId":"542","endLine":20,"endColumn":20},{"ruleId":"543","severity":1,"message":"556","line":20,"column":8,"nodeType":"541","messageId":"542","endLine":20,"endColumn":20},{"ruleId":"539","severity":1,"message":"557","line":25,"column":8,"nodeType":"541","messageId":"542","endLine":25,"endColumn":25},{"ruleId":"543","severity":1,"message":"557","line":25,"column":8,"nodeType":"541","messageId":"542","endLine":25,"endColumn":25},{"ruleId":"539","severity":1,"message":"558","line":45,"column":25,"nodeType":"541","messageId":"542","endLine":45,"endColumn":41},{"ruleId":"543","severity":1,"message":"558","line":45,"column":25,"nodeType":"541","messageId":"542","endLine":45,"endColumn":41},{"ruleId":"539","severity":1,"message":"559","line":15,"column":3,"nodeType":"541","messageId":"542","endLine":15,"endColumn":10},{"ruleId":"543","severity":1,"message":"559","line":15,"column":3,"nodeType":"541","messageId":"542","endLine":15,"endColumn":10},{"ruleId":"539","severity":1,"message":"560","line":5,"column":3,"nodeType":"541","messageId":"542","endLine":5,"endColumn":9},{"ruleId":"543","severity":1,"message":"560","line":5,"column":3,"nodeType":"541","messageId":"542","endLine":5,"endColumn":9},{"ruleId":"539","severity":1,"message":"561","line":14,"column":8,"nodeType":"541","messageId":"542","endLine":14,"endColumn":29},{"ruleId":"543","severity":1,"message":"561","line":14,"column":8,"nodeType":"541","messageId":"542","endLine":14,"endColumn":29},{"ruleId":"545","severity":1,"message":"562","line":94,"column":1,"nodeType":"547","messageId":"548","endLine":94,"endColumn":125},{"ruleId":"539","severity":1,"message":"563","line":2,"column":8,"nodeType":"541","messageId":"542","endLine":2,"endColumn":12},{"ruleId":"543","severity":1,"message":"563","line":2,"column":8,"nodeType":"541","messageId":"542","endLine":2,"endColumn":12},{"ruleId":"539","severity":1,"message":"564","line":38,"column":9,"nodeType":"541","messageId":"542","endLine":38,"endColumn":16},{"ruleId":"543","severity":1,"message":"564","line":38,"column":9,"nodeType":"541","messageId":"542","endLine":38,"endColumn":16},{"ruleId":"539","severity":1,"message":"565","line":16,"column":21,"nodeType":"541","messageId":"542","endLine":16,"endColumn":33},{"ruleId":"543","severity":1,"message":"565","line":16,"column":21,"nodeType":"541","messageId":"542","endLine":16,"endColumn":33},{"ruleId":"539","severity":1,"message":"566","line":17,"column":20,"nodeType":"541","messageId":"542","endLine":17,"endColumn":31},{"ruleId":"543","severity":1,"message":"566","line":17,"column":20,"nodeType":"541","messageId":"542","endLine":17,"endColumn":31},{"ruleId":"539","severity":1,"message":"567","line":23,"column":8,"nodeType":"541","messageId":"542","endLine":23,"endColumn":27},{"ruleId":"543","severity":1,"message":"567","line":23,"column":8,"nodeType":"541","messageId":"542","endLine":23,"endColumn":27},{"ruleId":"539","severity":1,"message":"568","line":2,"column":3,"nodeType":"541","messageId":"542","endLine":2,"endColumn":8},{"ruleId":"539","severity":1,"message":"569","line":3,"column":3,"nodeType":"541","messageId":"542","endLine":3,"endColumn":7},{"ruleId":"545","severity":1,"message":"570","line":140,"column":1,"nodeType":"547","messageId":"548","endLine":140,"endColumn":127},{"ruleId":"545","severity":1,"message":"571","line":141,"column":1,"nodeType":"547","messageId":"548","endLine":141,"endColumn":160},{"ruleId":"545","severity":1,"message":"572","line":144,"column":1,"nodeType":"547","messageId":"548","endLine":144,"endColumn":146},{"ruleId":"545","severity":1,"message":"573","line":145,"column":1,"nodeType":"547","messageId":"548","endLine":145,"endColumn":150},{"ruleId":"539","severity":1,"message":"574","line":8,"column":3,"nodeType":"541","messageId":"542","endLine":8,"endColumn":10},{"ruleId":"539","severity":1,"message":"575","line":9,"column":3,"nodeType":"541","messageId":"542","endLine":9,"endColumn":13},{"ruleId":"539","severity":1,"message":"576","line":10,"column":3,"nodeType":"541","messageId":"542","endLine":10,"endColumn":9},{"ruleId":"530","replacedBy":"577"},{"ruleId":"532","replacedBy":"578"},{"ruleId":"534","replacedBy":"579"},"jsx-a11y/accessible-emoji",[],"no-native-reassign",["580"],"no-negated-in-lhs",["581"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'RootState' is defined but never used.","max-len","This line has a length of 270. Maximum allowed is 120.","Program","max","'AddRoundedIcon' is defined but never used.","'openFilterDialog' is assigned a value but never used.","'Bar' is defined but never used.","'NoProfileHigh' is defined but never used.","'MasterDetail' is defined but never used.","'uuid' is defined but never used.","'Flag' is defined but never used.","'FilterDrawer' is defined but never used.","'calculateFileSize' is defined but never used.","'setActiveFilters' is assigned a value but never used.","'Tooltip' is defined but never used.","'Format' is defined but never used.","'getFullMediaServerUrl' is defined but never used.","This line has a length of 124. Maximum allowed is 120.","'Grid' is defined but never used.","'classes' is assigned a value but never used.","'setFullWidth' is assigned a value but never used.","'setMaxWidth' is assigned a value but never used.","'DetailMovieTemplate' is defined but never used.","'Admin' is defined but never used.","'User' is defined but never used.","This line has a length of 126. Maximum allowed is 120.","This line has a length of 159. Maximum allowed is 120.","This line has a length of 145. Maximum allowed is 120.","This line has a length of 149. Maximum allowed is 120.","'unknown' is defined but never used.","'SuccesFull' is defined but never used.","'Failed' is defined but never used.",[],["580"],["581"],"no-global-assign","no-unsafe-negation"]